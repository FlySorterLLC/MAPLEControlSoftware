import cv2
import numpy as np
import time
import robotutil

#### BEGIN PGM ####
robot = robotutil.santaFe("SantaFe.cfg")

if robot.isInitialized == False:
    print "Initialization error."
    exit()
else:
    print "Robot initialized."

robot.home()

#
robot.moveZ(ZImagePad)

mazeCounter = 1
robot.light(True)

#
##radius is r, and r = 14.18 mm 
r = 14.18

moveXY(ptlist(r, n=100)); 

theta = pi/6 
rx = x0 + math.cos(theta)
ry = y0 + math.sin(theta)

##x0 and y0 vary depending on coordinate we're on for the circle center; each circle center is
##29.38 mm apart; these coordinates are/should be generated by

##robotutil stuff
## take one of the functions below; once points generated, transform each point by adding to center (x0, y0) of designated center of circle 
##def ptlist(r, n=100):
##        return [(math.cos(2*pi/n*x)*r,math.sin(2*pi/n*x)*r) for x in xrange(0,n+1)]
##def all_floats():
##    for exp in xrange( -1024, 1024 ):
##        for man in xrange( -(2**52), 2**52 ):
##            yield (man/2**52)*2**exp
##
##def all_circle( r=100, domain=all_floats ):
##    for x in domain():
##       for y in domain():
##          if x**2 + y**2 == r**2:
##              yield x, y

##var items = 4;
##for(var i = 0; i < items; i++) {
##
##    var x = x0 + r * Math.cos(2 * Math.PI * i / items);
##    var y = y0 + r * Math.sin(2 * Math.PI * i / items);   
##    $("#center").append("<div class='point' style='left:"+ x +"px;top:"+ y +"px'></div>");    
##
##}
##
